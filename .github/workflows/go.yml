name: Go test

on:
  push: 
    branches:
      - main

env:
  AWS_REGION: ap-northeast-1
  ENV_NAME: prod
  SERVICE_NAME: tranaza
  IMAGE_TAG: ${{ github.sha }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16

    - name: Test
      run: go test -v ./testmain
  
  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v2
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.PROD_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Push golang image to ecr
      env:
        DOCKER_BUILDKIT: 1
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ env.SERVICE_NAME }}-${{ env.ENV_NAME }}-golang
      run: |
        docker build . \
          -f Dockerfile \
          -t $ECR_REGISTRY/$ECR_REPOSITORY:latest \
          -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Upload env file
      run: | 
        aws s3 cp .env.$ENV_NAME s3://tfstate-s3-bucket-for-tranaza-$SERVICE_NAME-$ENV_NAME-$SERVICE_NAME-env-file/$IMAGE_TAG/.env
      working-directory: backend

    - name: Push nginx image to ecr
      env:
        DOCKER_BUILDKIT: 1
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ env.SERVICE_NAME }}-${{ env.ENV_NAME }}-nginx
      run: |
        docker build . \
          -f nginx/Dockerfile \
          -t $ECR_REGISTRY/$ECR_REPOSITORY:latest \
          -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Download ecspresso
      uses: kayac/ecspresso@v1
      with:
        version: v1.7.12

    - name: Register task definition
      run: ecspresso register --config config_$ENV_NAME.yaml
      working-directory: ./ecspresso

    - name: Migrate database
      run: |
        ecspresso run --config config_$ENV_NAME.yaml \
          --latest-task-definition \
          --watch-container=golang \
          --overrides='{"containerOverrides":[{"name":"nginx","command":["nginx","-v"]},{"name":"golang","command":["go","version","chmod","+x","prod_sql.sh","./prod_sql.sh"]}]}'
      working-directory: ./ecspresso

    - name: Deploy to ecs
      run: ecspresso deploy --config config_$ENV_NAME.yaml
      working-directory: ./ecspresso
